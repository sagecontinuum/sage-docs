"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[915],{8038:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return r},toc:function(){return d},default:function(){return c}});var i=o(7462),n=o(3366),a=(o(7294),o(3905)),l=["components"],s={sidebar_position:2},p="Compute at the Edge",r={unversionedId:"tutorials/compute-at-edge",id:"tutorials/compute-at-edge",isDocsHomePage:!1,title:"Compute at the Edge",description:"Introduction to edge applications",source:"@site/docs/tutorials/compute-at-edge.md",sourceDirName:"tutorials",slug:"/tutorials/compute-at-edge",permalink:"/sage-docs/docs/tutorials/compute-at-edge",editUrl:"https://github.com/sagecontinuum/sage-docs/edit/main/docs/tutorials/compute-at-edge.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Integrate my sensors into SAGE",permalink:"/sage-docs/docs/tutorials/integrate-my-sensor"},next:{title:"Access and Use Data",permalink:"/sage-docs/docs/tutorials/accessing-data"}},d=[{value:"Introduction to edge applications",id:"introduction-to-edge-applications",children:[]},{value:"Developing new edge applications",id:"developing-new-edge-applications",children:[{value:"Write plugin code.",id:"write-plugin-code",children:[]},{value:"Submit a plugin code to ECR",id:"submit-a-plugin-code-to-ecr",children:[]},{value:"Schedule a plugin for deployment",id:"schedule-a-plugin-for-deployment",children:[]}]}],u={toc:d};function c(e){var t=e.components,s=(0,n.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compute-at-the-edge"},"Compute at the Edge"),(0,a.kt)("h2",{id:"introduction-to-edge-applications"},"Introduction to edge applications"),(0,a.kt)("p",null,"Sage nodes run edge applications (i.e. ",(0,a.kt)("strong",{parentName:"p"},"plugins"),") to process data. A plugin is a self-contained program which typically reads sensors, audio or video data, does some processing and then publishes information derived from that data."),(0,a.kt)("p",null,"The most basic example of a plugin is one which reads and publishes a value from a sensor. A more complex plugin could publish the number of birds in a scene using a deep learning model."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Basic Plugin",src:o(3658).Z})),(0,a.kt)("p",null,"Plugins fit into the wider Sage infrastructure by being added to the ",(0,a.kt)("a",{parentName:"p",href:"https://portal.sagecontinuum.org"},"Edge Code Repository"),", deployed to nodes and publishing data to our Sage Data Repository."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Plugins in Sage",src:o(9957).Z})),(0,a.kt)("h2",{id:"developing-new-edge-applications"},"Developing new edge applications"),(0,a.kt)("p",null,"Writing a new edge applications (i.e. ",(0,a.kt)("strong",{parentName:"p"},"plugin"),") typically consists of the following steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Write plugin code."),(0,a.kt)("li",{parentName:"ol"},"Submit plugin code to the ",(0,a.kt)("a",{parentName:"li",href:"https://portal.sagecontinuum.org"},"Edge Code Repository"),"."),(0,a.kt)("li",{parentName:"ol"},"Schedule a plugin for deployment.")),(0,a.kt)("p",null,"We'll cover each of these in the following sections."),(0,a.kt)("h3",{id:"write-plugin-code"},"Write plugin code."),(0,a.kt)("p",null,"We provide a Python SDK called ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/pywaggle"},"pywaggle")," to help develop plugins for Sage. Please refer to pywaggle's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/pywaggle/blob/main/docs/writing-a-plugin.md"},"usage guide")," on how to get started."),(0,a.kt)("h3",{id:"submit-a-plugin-code-to-ecr"},"Submit a plugin code to ECR"),(0,a.kt)("p",null,"We require plugins to be submitted to the ",(0,a.kt)("a",{parentName:"p",href:"https://portal.sagecontinuum.org"},"Edge Code Repository")," to be built and tested to validate that they are ready to be scheduled on nodes."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"TODO Describe a plugin's sage.yaml and Dockerfile.")),(0,a.kt)("p",null,"In order to submit a plugin:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Go to ",(0,a.kt)("a",{parentName:"li",href:"https://portal.sagecontinuum.org"},"Edge Code Repository"),"."),(0,a.kt)("li",{parentName:"ol"},'Go to "Sign In" and follow the instructions.'),(0,a.kt)("li",{parentName:"ol"},'Go to "My Apps".'),(0,a.kt)("li",{parentName:"ol"},'Go to "Create app" and follow the instructions.')),(0,a.kt)("p",null,'If everything is successful, your plugin will appeared and be marked as "Built".'),(0,a.kt)("h3",{id:"schedule-a-plugin-for-deployment"},"Schedule a plugin for deployment"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"TODO Tie in with Yongho's scheduling doc.")))}c.isMDXComponent=!0},3658:function(e,t,o){t.Z=o.p+"assets/images/plugin-basic-a1632d393968488af247b3045de6dc0c.svg"},9957:function(e,t,o){t.Z=o.p+"assets/images/plugin-sage-f6541c3f2d3c2ea6a3661583bface8c4.svg"}}]);