"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[915],{8038:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return l},contentTitle:function(){return r},metadata:function(){return u},toc:function(){return p},default:function(){return g}});var a=i(7462),n=i(3366),o=(i(7294),i(3905)),s=["components"],l={sidebar_position:2},r="Compute at the Edge",u={unversionedId:"tutorials/compute-at-edge",id:"tutorials/compute-at-edge",isDocsHomePage:!1,title:"Compute at the Edge",description:"Sage nodes run edge applications (i.e. plugins) to process data. A plugin is a self-contained program which typically reads sensors, audio or video data, does some processing and then publishes information derived from that data.",source:"@site/docs/tutorials/compute-at-edge.md",sourceDirName:"tutorials",slug:"/tutorials/compute-at-edge",permalink:"/sage-docs/docs/tutorials/compute-at-edge",editUrl:"https://github.com/sagecontinuum/sage-docs/edit/main/docs/tutorials/compute-at-edge.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Integrate my sensors into SAGE",permalink:"/sage-docs/docs/tutorials/integrate-my-sensor"},next:{title:"Access and Use Data",permalink:"/sage-docs/docs/tutorials/accessing-data"}},p=[{value:"Writing a new plugin",id:"writing-a-new-plugin",children:[{value:"1. Write a plugin",id:"1-write-a-plugin",children:[]},{value:"2. Submit a plugin to ECR",id:"2-submit-a-plugin-to-ecr",children:[]},{value:"3. Schedule a plugin for deployment",id:"3-schedule-a-plugin-for-deployment",children:[]}]}],d={toc:p};function g(e){var t=e.components,l=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compute-at-the-edge"},"Compute at the Edge"),(0,o.kt)("p",null,"Sage nodes run edge applications (i.e. ",(0,o.kt)("strong",{parentName:"p"},"plugins"),") to process data. A plugin is a self-contained program which typically reads sensors, audio or video data, does some processing and then publishes information derived from that data."),(0,o.kt)("p",null,"The most basic example of a plugin is one which reads and publishes a value from a sensor. A more complex plugin could publish the number of birds in a scene using a deep learning model."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Basic Plugin",src:i(3658).Z})),(0,o.kt)("p",null,"Plugins fit into the wider Sage infrastructure by being added to the ",(0,o.kt)("a",{parentName:"p",href:"https://portal.sagecontinuum.org"},"Edge Code Repository"),", deployed to nodes and publishing data to our Sage Data Repository."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Plugins in Sage",src:i(9957).Z})),(0,o.kt)("h2",{id:"writing-a-new-plugin"},"Writing a new plugin"),(0,o.kt)("p",null,"Writing a new plugins typically consists of the following steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Write a plugin."),(0,o.kt)("li",{parentName:"ol"},"Submit a plugin to the ",(0,o.kt)("a",{parentName:"li",href:"https://portal.sagecontinuum.org"},"Edge Code Repository"),"."),(0,o.kt)("li",{parentName:"ol"},"Schedule a plugin for deployment.")),(0,o.kt)("p",null,"We'll cover each of these in the following sections."),(0,o.kt)("h3",{id:"1-write-a-plugin"},"1. Write a plugin"),(0,o.kt)("p",null,"We provide a Python SDK called ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/pywaggle"},"pywaggle")," to help develop plugins for Sage. Please refer to pywaggle's ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/pywaggle/blob/main/docs/writing-a-plugin.md"},"usage guide")," on how to get started."),(0,o.kt)("h3",{id:"2-submit-a-plugin-to-ecr"},"2. Submit a plugin to ECR"),(0,o.kt)("p",null,"TODO"),(0,o.kt)("h3",{id:"3-schedule-a-plugin-for-deployment"},"3. Schedule a plugin for deployment"),(0,o.kt)("p",null,"TODO"))}g.isMDXComponent=!0},3658:function(e,t,i){t.Z=i.p+"assets/images/plugin-basic-2754755cb983119f2febb6462f2b4b7e.svg"},9957:function(e,t,i){t.Z=i.p+"assets/images/plugin-sage-15854d770ae98f1d814ec021f0f93dbd.svg"}}]);